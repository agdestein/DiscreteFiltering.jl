var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DiscreteFiltering","category":"page"},{"location":"#DiscreteFiltering","page":"Home","title":"DiscreteFiltering","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DiscreteFiltering.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DiscreteFiltering]","category":"page"},{"location":"#DiscreteFiltering.DiscreteFiltering","page":"Home","title":"DiscreteFiltering.DiscreteFiltering","text":"Discrete filtering toolbox\n\n\n\n\n\n","category":"module"},{"location":"#DiscreteFiltering.S!-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.S!","text":"S!(A, u, t; kwargs...)\n\nSolve ODE for given operator and IC (mutating form, not differentiable).\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.S-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.S","text":"S(A, u₀, t; kwargs...)\n\nSolve ODE for given operator and IC. This form is differentiable.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.S_stencil!-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.S_stencil!","text":"S_stencil!(A, u, t; kwargs...)\n\nSolve ODE for given operator and IC (mutating form, not differentiable).\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.circulant-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.circulant","text":"circulant(n, inds, stencil)\n\nCreate circulant SparseMatrixCSC.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_data_dns-NTuple{4, Any}","page":"Home","title":"DiscreteFiltering.create_data_dns","text":"create_data_dns(A, c, ξ, t)\n\nCreate DNS solution (numerical approximation).\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_data_exact-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.create_data_exact","text":"create_data_exact(c, ξ, t)\n\nCreate exact unfiltered solutions.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_data_filtered-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.create_data_filtered","text":"create_data_filtered(W, A, dns)\n\nCreate discrete filtered solution from DNS\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_gaussian-Tuple{Any}","page":"Home","title":"DiscreteFiltering.create_gaussian","text":"create_gaussian(h)\n\nCreate Gaussian filter with filter radius h.\n\nThe kernel is given by\n\n    G(x xi) = sqrtfrac32 pi h^2(x) mathrme^-frac3 (xi - x)^22 h^2(x)\n\nand the local transfer function by\n\n    hatG_k(x) = mathrme^-frac2 pi^23 k^2 h^2(x)\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_initial_state-Tuple{Any}","page":"Home","title":"DiscreteFiltering.create_initial_state","text":"create_initial_state(A_ref)\n\nCreate initial state for the ADAM optimizer.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_loss_fit-Tuple{Any, Any}","page":"Home","title":"DiscreteFiltering.create_loss_fit","text":"create_loss_fit(u, t; n_sample = size(u, 2), n_time = length(t) - 1, kwargs...)\n\nCreate embedded loss function on dataset, evaluating at n_sample random initial conditions and n_time random time steps at each call.\n\nThe keyword arguments kwargs are passed to the ODE-solver S.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_loss_mixed-Tuple{Any, Any}","page":"Home","title":"DiscreteFiltering.create_loss_mixed","text":"create_loss_mixed(losses, weights)\n\nCreate a composed loss function L(A) = sum_i w_i L_i(A).\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_loss_prior-Tuple{Any}","page":"Home","title":"DiscreteFiltering.create_loss_prior","text":"create_loss_prior(A_ref)\n\nCreate a prior loss functino comparing the operator A to a reference operator A_ref.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.create_tophat-Tuple{Any}","page":"Home","title":"DiscreteFiltering.create_tophat","text":"create_tophat(h)\n\nCreate top-hat filter with filter radius h.\n\nThe kernel is given by\n\n    G(x xi) =\n    begincases\n        frac12h(x) quad  xi - x leq h(x) \n        0 quad  textotherwise\n    endcases\n\nand the local transfer function by\n\n    hatG_k(x) = fracsin left ( 2 pi k h(x) right )2 pi k h(x)\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.filter_matrix-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.filter_matrix","text":"filter_matrix(F, x, ξ)\n\nCreate filter matrix with filter F from fine grid ξ to coarse grid x.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.fit_embedded-Tuple{Any, Any}","page":"Home","title":"DiscreteFiltering.fit_embedded","text":"fit_embedded(\n    state,\n    loss;\n    α = 0.001,\n    β₁ = 0.9,\n    β₂ = 0.999,\n    ϵ = 1e-8,\n    n_iter = 100,\n    testloss,\n    ntestloss = 10,\n    doplot = true,\n)\n\nFit operator to data while embedded in ODE solver using the ADAM optimizer.\n\nIf doplot, a real time plot of the validation performance is plotted.\n\nhttps://arxiv.org/abs/1412.6980\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.interpolation_matrix-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.interpolation_matrix","text":"interpolation_matrix(x, y)\n\nCreate matrix for interpolating from grid x in mathbbR^N to y in mathbbR^M.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.plotmat","page":"Home","title":"DiscreteFiltering.plotmat","text":"plotmat(A; kwargs...)\n\nPlot matrix.\n\n\n\n\n\n","category":"function"},{"location":"#DiscreteFiltering.relerr-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.relerr","text":"relerr(A, uₜ, t; kwargs...)\n\nRelative error, averaged over time and data samples.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.relerrs-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.relerrs","text":"relerrs(A, uₜ, t; kwargs...)\n\nTime dependent relative errors, averaged over data samples.\n\n\n\n\n\n","category":"method"},{"location":"#DiscreteFiltering.spectral_relerr-Tuple{Any, Any, Any}","page":"Home","title":"DiscreteFiltering.spectral_relerr","text":"spectral_relerr(A, uₜ, t; kwargs...)\n\nTime dependent spectral relative errors, averaged over data samples.\n\n\n\n\n\n","category":"method"}]
}
